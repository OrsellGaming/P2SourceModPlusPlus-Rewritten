.PHONY: all clean cvars
.FORCE:

CXX=gcc
SDIR=src
ODIR=obj

SRCS=$(shell find $(SDIR) -name '*.cpp')
OBJS=$(patsubst $(SDIR)/%.cpp, $(ODIR)/%.o, $(SRCS))

VERSION=$(shell git describe --tags)

# Header dependency target files; generated by g++ with -MMD
DEPS=$(OBJS:%.o=%.d)

WARNINGS=-Wall -Wno-parentheses -Wno-unknown-pragmas -Wno-delete-non-virtual-dtor -Wno-overloaded-virtual
CXXFLAGS=-std=c++17 -m32 $(WARNINGS) -I$(SDIR) -fPIC -D_GNU_SOURCE -Ilib/ffmpeg/include -Ilib/SFML/include -Ilib/curl/include -Ilib/discord-rpc/include -DSFML_STATIC -DCURL_STATICLIB
LDFLAGS=-m32 -shared -lstdc++fs -Llib/ffmpeg/lib/linux -lavformat -lavcodec -lavutil -lswscale -lswresample -lx264 -lx265 -lvorbis -lvorbisenc -lvorbisfile -logg -lopus -lvpx -Llib/SFML/lib/linux -lsfml -Llib/curl/lib/linux -lcurl -lssl -lcrypto -lnghttp2 -Llib/discord-rpc/lib/linux -ldiscord-rpc

# Import config.mk, which can be used for optional config
-include config.mk

all: p2sm.so
clean:
	rm -rf $(ODIR) p2sm.so src/Version.hpp

-include $(DEPS)

p2sm.so: src/Version.hpp $(OBJS)
	$(CXX) $^ $(LDFLAGS) -o $@

$(ODIR)/%.o: $(SDIR)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) -MMD -c $< -o $@

src/Version.hpp: .FORCE
	if [ "$$RELEASE_BUILD" ]; then echo "#define P2SM_VERSION \"$(VERSION)\"" >"$@"; fi
	if [ -z "$$RELEASE_BUILD" ]; then echo "#define P2SM_VERSION \"$(VERSION)-canary\"" >"$@"; fi
	if [ -z "$$RELEASE_BUILD" ]; then echo "#define P2SM_DEV_BUILD 1" >>"$@"; fi
	echo "#define P2SM_DEMO_SIGN_PUBKEY { $$DEMO_SIGN_PUBKEY }" >>"$@"
	echo "#define P2SM_DEMO_SIGN_PRIVKEY { $$DEMO_SIGN_PRIVKEY }" >>"$@"
